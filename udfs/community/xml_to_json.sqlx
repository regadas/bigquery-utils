config { hasOutput: true }
/*
 * MIT License
 * 
 * Copyright (c) 2017 Amit Kumar Gupta
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

CREATE OR REPLACE FUNCTION ${self()}(xml STRING)
RETURNS JSON
DETERMINISTIC
LANGUAGE js 
OPTIONS(
library="${JS_BUCKET}/fast-xml-parser-v4.4.1.min.js",
description="""Converts XML to JSON using the open source
fast-xml-parser JavaScript library. 
NULL input is returned as NULL output.
Empty string input is returned as empty JSON object.

fast-xml-parser repo:
https://github.com/NaturalIntelligence/fast-xml-parser

See link below for a list of options you can pass to the XMLParser object: 
https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md

/*
 * Example Usage:
 * Run the query below in BigQuery
 */

SELECT bqutil.fn.xml_to_json(
  '<xml foo="FOO"><bar><baz>BAZ</baz></bar></xml>'
)

/*
 * The query result will be the following:
 * {"xml":{"@_foo":"FOO","bar":{"baz":"BAZ"}}}
 */

""") AS """
if(xml===null) {
  return null;
}
return JSON.parse(JSON.stringify(new fast_xml_parser.XMLParser({
  ignoreAttributes : false
}).parse(xml)));
""";
